id: Detonate File - ThreatGrid
version: -1
name: Detonate File - ThreatGrid
fromversion: 4.0.0
description: Detonate one or more files using the ThreatGrid integration. This playbook
  returns relevant reports to the War Room and file reputations to the context data.
  The detonation supports the following file types - EXE, DLL, JAR, JS, PDF, DOC,
  DOCX, RTF, XLS, PPT, PPTX, XML, ZIP, VBN, SEP, XZ, GZ, BZ2, TAR, MHTML, SWF, LNK,
  URL, MSI, JTD, JTT, JTDC, JTTC, HWP, HWT, HWPX, BAT, HTA, PS1, VBS, WSF, JSE, VBE,
  CHM
starttaskid: "0"
tasks:
  "0":
    id: "0"
    taskid: c4e9aab2-699c-4769-8cd3-d16837b79a52
    type: start
    task:
      id: c4e9aab2-699c-4769-8cd3-d16837b79a52
      version: -1
      name: ""
      iscommand: false
      brand: ""
      description: ""
    nexttasks:
      '#none#':
      - "5"
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 20,
          "y": 60
        }
      }
    note: false
  "5":
    id: "5"
    taskid: 460ef9dc-0f88-4cf5-81fa-c22478883891
    type: condition
    task:
      id: 460ef9dc-0f88-4cf5-81fa-c22478883891
      version: -1
      name: Is ThreatGrid enabled?
      description: Verify that there is a valid instance of ThreatGrid is enabled
      type: condition
      iscommand: false
      brand: ""
    nexttasks:
      '#default#':
      - "6"
      "yes":
      - "16"
    separatecontext: false
    conditions:
    - label: "yes"
      condition:
      - - operator: isExists
          left:
            value:
              complex:
                root: modules
                filters:
                - - operator: isEqualString
                    left:
                      value:
                        simple: modules.brand
                      iscontext: true
                    right:
                      value:
                        simple: Threat Grid
                    ignorecase: true
                - - operator: isEqualString
                    left:
                      value:
                        simple: modules.state
                      iscontext: true
                    right:
                      value:
                        simple: active
                    ignorecase: true
                accessor: brand
            iscontext: true
    view: |-
      {
        "position": {
          "x": 20,
          "y": 195
        }
      }
    note: false
  "6":
    id: "6"
    taskid: 8a774711-833b-445b-8ae9-231b0459de1f
    type: title
    task:
      id: 8a774711-833b-445b-8ae9-231b0459de1f
      version: -1
      name: Done
      type: title
      iscommand: false
      brand: ""
      description: ""
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 10,
          "y": 1450
        }
      }
    note: false
  "8":
    id: "8"
    taskid: 38f5cfcb-f7a4-4861-853b-ce101b37f3d4
    type: regular
    task:
      id: 38f5cfcb-f7a4-4861-853b-ce101b37f3d4
      version: -1
      name: ThreatGrid Get Samples State
      description: Get the sample state.
      script: Threat Grid|||threat-grid-get-samples-state
      type: regular
      iscommand: true
      brand: Threat Grid
    nexttasks:
      '#none#':
      - "6"
    scriptarguments:
      ids:
        complex:
          root: ThreatGrid
          accessor: Sample.ID
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 10,
          "y": 1245
        }
      }
    note: false
  "11":
    id: "11"
    taskid: 32bc3054-f7dd-40d1-8043-ec8987c64a5f
    type: regular
    task:
      id: 32bc3054-f7dd-40d1-8043-ec8987c64a5f
      version: -1
      name: Set file to context
      description: Set the file object into context.
      scriptName: Set
      type: regular
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "14"
    scriptarguments:
      append: {}
      key:
        simple: File
      value:
        complex:
          root: inputs.File
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 20,
          "y": 555
        }
      }
    note: false
  "13":
    id: "13"
    taskid: 7b8ac3cc-20f1-4693-84b1-c0f812fb33a0
    type: regular
    task:
      id: 7b8ac3cc-20f1-4693-84b1-c0f812fb33a0
      version: -1
      name: ThreatGrid Upload File
      description: Uploads a file to Threat Grid
      script: Threat Grid|||threat-grid-upload-sample
      type: regular
      iscommand: true
      brand: Threat Grid
    nexttasks:
      '#none#':
      - "15"
    scriptarguments:
      file-id:
        complex:
          root: File
          accessor: EntryID
      filename:
        complex:
          root: inputs.FileName
      os:
        complex:
          root: inputs.OS
      osver:
        complex:
          root: inputs.OSVersion
      private:
        complex:
          root: inputs.Private
      source:
        complex:
          root: inputs.Source
      tags:
        complex:
          root: inputs.Tags
      vm:
        complex:
          root: inputs.VM
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 10,
          "y": 920
        }
      }
    note: false
  "14":
    id: "14"
    taskid: e3f25144-f9da-45d0-87d0-f37f260b7895
    type: condition
    task:
      id: e3f25144-f9da-45d0-87d0-f37f260b7895
      version: -1
      name: Is the file type supported?
      description: Will fail if file type is not supported.
      type: condition
      iscommand: false
      brand: ""
    nexttasks:
      '#default#':
      - "6"
      "yes":
      - "13"
    separatecontext: false
    conditions:
    - label: "yes"
      condition:
      - - operator: isExists
          left:
            value:
              complex:
                root: File
                filters:
                - - operator: match
                    left:
                      value:
                        simple: File.Type
                      iscontext: true
                    right:
                      value:
                        simple: .*(?:EXE|DLL|JAR|JS|PDF|DOC|DOCX|RTF|XLS|PPT|PPTX|XML|ZIP|VBN|SEP|XZ|GZ|BZ2|TAR|MHTML|SWF|LNK|URL|MSI|JTD|JTT|JTDC|JTTC|HWP|HWT|HWPX|BAT|HTA|PS1|VBS|WSF|JSE|VBE|CHM)\b
                  - operator: match
                    left:
                      value:
                        simple: File.Info
                      iscontext: true
                    right:
                      value:
                        simple: .*(?:EXE|DLL|JAR|JS|PDF|DOC|DOCX|RTF|XLS|PPT|PPTX|XML|ZIP|VBN|SEP|XZ|GZ|BZ2|TAR|MHTML|SWF|LNK|URL|MSI|JTD|JTT|JTDC|JTTC|HWP|HWT|HWPX|BAT|HTA|PS1|VBS|WSF|JSE|VBE|CHM)\b
            iscontext: true
    view: |-
      {
        "position": {
          "x": 20,
          "y": 720
        }
      }
    note: false
  "15":
    id: "15"
    taskid: 315d999b-85d7-4e9c-8495-830c8b788d32
    type: playbook
    task:
      id: 315d999b-85d7-4e9c-8495-830c8b788d32
      version: -1
      name: GenericPolling
      description: |-
        Use as a sub-playbook to block execution of the master playbook until a remote action is complete.
        This playbook implements polling by continually running the command in Step #2 until the operation completes.
        The remote action should have the following structure:

        1. Initiate the operation.
        2. Poll to check if the operation completed.
        3. (optional) Get the results of the operation.
      playbookName: GenericPolling
      type: playbook
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "8"
    scriptarguments:
      Ids:
        complex:
          root: ThreatGrid
          accessor: Sample.ID
      Interval:
        complex:
          root: inputs.Interval
      PollingCommandArgName:
        simple: ids
      PollingCommandName:
        simple: threat-grid-get-samples-state
      Timeout:
        complex:
          root: inputs.Timeout
      dt:
        simple: ThreatGrid.Sample(val.State!=='succ' && val.State!=='fail').ID
    separatecontext: true
    loop:
      iscommand: false
      exitCondition: ""
      wait: 1
    view: |-
      {
        "position": {
          "x": 10,
          "y": 1080
        }
      }
    note: false
  "16":
    id: "16"
    taskid: 3146567b-2f8a-4c14-880c-21d6ba502224
    type: condition
    task:
      id: 3146567b-2f8a-4c14-880c-21d6ba502224
      version: -1
      name: Is there a file to detonate?
      description: Checks whether there's a file to detonate - if not then the detonation
        is skipped
      type: condition
      iscommand: false
      brand: ""
    nexttasks:
      '#default#':
      - "6"
      "yes":
      - "11"
    separatecontext: false
    conditions:
    - label: "yes"
      condition:
      - - operator: isExists
          left:
            value:
              simple: inputs.File
            iscontext: true
    view: |-
      {
        "position": {
          "x": 20,
          "y": 380
        }
      }
    note: false
view: |-
  {
    "linkLabelsPosition": {
      "14_13_yes": 0.52,
      "5_6_#default#": 0.37
    },
    "paper": {
      "dimensions": {
        "height": 1455,
        "width": 390,
        "x": 10,
        "y": 60
      }
    }
  }
inputs:
- key: File
  value:
    complex:
      root: File
  required: false
  description: File object of the file to detonate.
- key: FileName
  value:
    simple: file-detonated-via-demisto
  required: false
  description: Name of the file to detonate.
- key: OS
  value: {}
  required: false
  description: Source OS (string)
- key: OSVersion
  value: {}
  required: false
  description: OS version (string)
- key: VM
  value: {}
  required: false
  description: The VM to use (string)
- key: Private
  value: {}
  required: false
  description: The sample is marked private if this is present, and set to any value
    other than false.
- key: Source
  value: {}
  required: false
  description: a string used for identifying the source of the detonation (user defined)
- key: Tags
  value: {}
  required: false
  description: A comma-separated list of tags applied to this sample.
- key: Interval
  value:
    simple: "1"
  required: false
  description: Polling frequency - how often the polling command should run (minutes)
- key: Timeout
  value:
    simple: "15"
  required: false
  description: How much time to wait before a timeout occurs (minutes)
outputs:
- contextPath: File.Malicious
  description: The File malicious description
  type: unknown
- contextPath: File.Malicious.Vendor
  description: For malicious files, the vendor that made the decision
  type: string
- contextPath: File.Type
  description: File type e.g. "PE"
  type: string
- contextPath: File.Size
  description: File size
  type: number
- contextPath: File.MD5
  description: MD5 hash of the file
  type: string
- contextPath: File.Name
  description: Filename
  type: string
- contextPath: File.SHA1
  description: SHA1 hash of the file
  type: string
- contextPath: File
  description: The File object
  type: unknown
- contextPath: File.SHA256
  description: SHA256 hash of the file
  type: string
- contextPath: DBotScore
  description: The DBotScore object
  type: unknown
- contextPath: DBotScore.Indicator
  description: The indicator we tested
  type: string
- contextPath: DBotScore.Type
  description: The type of the indicator
  type: string
- contextPath: DBotScore.Vendor
  description: Vendor used to calculate the score
  type: string
- contextPath: DBotScore.Score
  description: The actual score
  type: number
- contextPath: Sample.State
  description: The sample state.
- contextPath: Sample.ID
  description: The sample ID.
releaseNotes: "-"