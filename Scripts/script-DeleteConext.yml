commonfields:
  id: DeleteContext
  version: -1
name: DeleteContext
script: |
  var fieldsToDelete;
  var shouldDeleteAll = (args.all === 'yes');
  var isSubPlaybookKey = (args.subplaybook === 'yes');
  if (!shouldDeleteAll && !args.key) {
      return {Contents: 'You must specify key or all=yes',
                      ContentsFormat: formats.text,
                      Type: entryTypes.error};
  }
  if (shouldDeleteAll) {
      var keysToKeep = (args.keysToKeep) ? args.keysToKeep.split(',') : [];
      fieldsToDelete = Object.keys(invContext);

      // delete each field in context
      var errorsStr = "";
      for (var i = 0; i < fieldsToDelete.length; i++) {
          if (keysToKeep.indexOf(fieldsToDelete[i]) == -1) {
              var result = executeCommand('delContext', { key: fieldsToDelete[i], id: args.id });
              if(!result || result.type === entryTypes.error) {
                  errorsStr = "errorsStr" + "\n" + result.Contents;
              }
          }
      }
      if (errorsStr) {
          return "Context cleared with the folloing errors:" + errorsStr;
      } else {
          return "Context cleared";
      }
  } else {
      var key = args.key;
      if (isSubPlaybookKey) {
        key = 'subplaybook-${currentPlaybookID}.' + key;
      }
      return executeCommand('delContext', { key: key });
  }
type: javascript
tags:
- Utility
comment: Delete field from context
enabled: true
args:
- name: key
  default: true
  description: The key to delete from the context
- name: all
  auto: PREDEFINED
  predefined:
  - "yes"
  - "no"
  description: If you choose yes - all context will be deleted
- name: subplaybook
  auto: PREDEFINED
  predefined:
  - "yes"
  - "no"
  description: Choose yes if the context key is inside a sub-playbook
- name: keysToKeep
  description: Context keys (top-level keys) to keep when deleting all context. Use comma to specify multiple values 
scripttarget: 0
runonce: false
